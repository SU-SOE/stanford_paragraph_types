<?php

/**
 * @file
 * Stanford Paragraph Types Defaults.
 */

/**
 * Implements hook_features_api().
 */
function stanford_paragraph_types_defaults_features_api() {
  return array(
    'paragraph_defaults' => array(
      'default_hook' => 'paragraph_defaults',
      'default_file' => FEATURES_DEFAULTS_INCLUDED,
      'feature_source' => TRUE,
      'file' => drupal_get_path('module', 'stanford_paragraph_types_defaults') . '/stanford_paragraph_types_defaults.features.inc',
    ),
  );
}

/**
 * Implements hook_permission().
 */
function stanford_paragraph_types_defaults_permission() {
  return array(
    'administer stanford paragraph types defaults' => array(
      'title' => t('Administer Stanford Paragraph Types Defaults'),
      'description' => t('Create and modify default paragraph items.'),
    ),
  );
}

/**
 * Implements hook_entity_delete().
 */
function stanford_paragraph_types_defaults_entity_delete($entity, $type) {
  if ($type == 'paragraphs_item') {
    $item_id = $entity->item_id;

    $query = db_select('stanford_paragraphs_defaults', 's')
      ->fields('s', array('pid', 'item_ids'))
      ->condition('item_ids', "%$item_id%", 'LIKE')
      ->execute()
      ->fetchAllKeyed();

    foreach ($query as $pid => $item_ids) {
      $default_items = explode(',', $item_ids);
      $item_position = array_search($item_id, $default_items);
      if ($item_position !== FALSE) {
        unset($default_items[$item_position]);
      }

      if ($default_items) {
        db_update('stanford_paragraphs_defaults')
          ->fields(array('item_ids' => implode(',', $default_items)))
          ->condition('pid', $pid)
          ->execute();
      }
      else {
        db_delete('stanford_paragraphs_defaults')
          ->condition('pid', $pid)->execute();
      }
    }
  }
}

/**
 * Implements hook_menu().
 */
function stanford_paragraph_types_defaults_menu() {
  $items = array();
  $items['admin/structure/paragraphs/stanford-defaults'] = array(
    'title' => 'Paragraph Defaults',
    'page callback' => 'stanford_ptd_overview',
    'file' => 'stanford_paragraph_types_defaults.forms.inc',
    'access arguments' => array('administer stanford paragraph types defaults'),
    'type' => MENU_LOCAL_TASK | MENU_NORMAL_ITEM,
  );
  $items['admin/structure/paragraphs/stanford-defaults/overview'] = array(
    'title' => 'Paragraph Defaults',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/structure/paragraphs/stanford-defaults/add/%/%/%'] = array(
    'title' => 'Add Default',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('stanford_ptd_add', 5, 6, 7),
    'file' => 'stanford_paragraph_types_defaults.forms.inc',
    'access arguments' => array('administer stanford paragraph types defaults'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/structure/paragraphs/stanford-defaults/edit/%'] = array(
    'title' => 'Edit Default',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('stanford_ptd_edit', 5),
    'file' => 'stanford_paragraph_types_defaults.forms.inc',
    'access arguments' => array('administer stanford paragraph types defaults'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/structure/paragraphs/stanford-defaults/delete/%'] = array(
    'title' => 'Edit Default',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('stanford_ptd_delete', 5),
    'file' => 'stanford_paragraph_types_defaults.forms.inc',
    'access arguments' => array('administer stanford paragraph types defaults'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_form_alter().
 */
function stanford_paragraph_types_defaults_form_alter(&$form, &$form_state, $form_id) {
  if (!isset($form['#entity_type']) || !isset($form['#bundle'])) {
    return;
  }
  $defaults = stanford_ptd_load_defaults($form['#entity_type'], $form['#bundle']);

  if (!$defaults) {
    return;
  }

  if (isset($form_state['load_default'])) {
    $entity = isset($form['#node']) ? $form['#node'] : $form['#entity'];

    // There's also no use if the form doesn't have these properties.
    if (isset($entity) && isset($form['#entity_type'])) {

      $entity_type = $form['#entity_type'];
      list($id, , $bundle_name) = entity_extract_ids($entity_type, $entity);

      if (!isset($id)) {
        $paragraphs_fields = field_read_fields(array(
          'type' => 'paragraphs',
          'entity_type' => $entity_type,
          'bundle' => $bundle_name,
        ));

        foreach ($paragraphs_fields as $paragraphs_field) {
          $field_name = $paragraphs_field['field_name'];
          if (isset($form[$field_name]) && $form[$field_name]['#access']) {
            // Add the paragraphs field defaults.
            $field = field_info_field($field_name);
            $instance = field_info_instance($entity_type, $field_name, $bundle_name);
            $paragraphs = stanford_ptd_load_default_paragraphs($form['#entity_type'], $form['#bundle'], $form_state['load_default']);

            // Unset the paragraph field.
            unset($form[$field_name]);
            unset($form_state['field'][$field_name]);

            // Order any existing paragraphs in a form we can use to set the
            // default value.
            $items = array();
            foreach ($paragraphs as $paragraphs_item) {
              $items[]['entity'] = replicate_clone_entity('paragraphs_item', $paragraphs_item);
            }
            $paragraphs_field = field_default_form($entity_type, $entity, $field, $instance, LANGUAGE_NONE, $items, $form, $form_state);
            $form += (array) $paragraphs_field;
          }
        }
      }
    }

    return;
  }

  foreach ($defaults as $field_name => $default_items) {
    $form[$field_name]['default_buttons'] = array(
      '#type' => 'container',
      '#title' => t('Build Default'),
      '#weight' => -99,
    );
    foreach ($default_items as $machine_name => $label) {
      $ajax = array('callback' => 'stanford_ptd_build_default_js');
      $form[$field_name]['default_buttons'][$machine_name] = array(
        '#type' => 'submit',
        '#value' => $label,
        '#submit' => array('stanford_ptd_build_default'),
        '#ajax' => $ajax + $form[$field_name]['und']['add_more']['add_more']['#ajax'],
        '#machine_name' => $machine_name,
        '#field_name' => $field_name,
      );
    }
  }
}

function stanford_ptd_build_default_js(&$form, &$form_state) {
  return $form[$form_state['triggering_element']['#field_name']];
}

function stanford_ptd_build_default(&$form, &$form_state) {
  $form_state['load_default'] = $form_state['triggering_element']['#machine_name'];
  $form_state['rebuild'] = TRUE;
}

function stanford_ptd_load_defaults($entity_type, $bundle, $field_name = NULL) {
  $defaults = array();
  /** @var DatabaseStatementBase $query */
  $query = db_select('stanford_paragraphs_defaults', 's')
    ->fields('s', array('machine_name', 'field_name', 'label'))
    ->condition('entity_type', $entity_type)
    ->condition('bundle', $bundle);
  if ($field_name) {
    $query->condition('field_name', $field_name);
  }
  $query = $query->execute();
  while ($row = $query->fetchAssoc()) {
    $defaults[$row['field_name']][$row['machine_name']] = $row['label'];
  }
  return $defaults;
}

function stanford_ptd_load_default_paragraphs($entity_type, $bundle, $machine_name) {
  $query = db_select('stanford_paragraphs_defaults', 's')
    ->fields('s', array('item_ids'))
    ->condition('machine_name', $machine_name)
    ->condition('entity_type', $entity_type)
    ->condition('bundle', $bundle)
    ->execute()
    ->fetchField();
  if ($query) {
    $item_ids = explode(',', $query);
    return paragraphs_item_load_multiple($item_ids);
  }
  return array();
}

function stanford_ptd_save_defaults($entity_type, $bundle, $field_name, $label, $machine_name, $value) {
  if (isset($value[LANGUAGE_NONE]) && !empty($value[LANGUAGE_NONE])) {
    $item_ids = array();

    foreach ($value[LANGUAGE_NONE] as $key => &$item) {
      if (isset($item['entity'])) {
        if ($entity = paragraphs_field_get_entity($item)) {
          if (isset($entity->removed) && $entity->removed) {
            db_delete('stanford_paragraphs_defaults')
              ->condition('item_ids', $entity->item_id)
              ->execute();
            $entity->delete();
          }
          else {
            // Save, but don't set the host entity.
            $entity->save(TRUE);
            $item_ids[] = $entity->item_id;
          }
        }
      }
    }

    if ($item_ids) {
      // todo: Weights
      // Keep track of the entity_id's in our own table.
      db_merge('stanford_paragraphs_defaults')
        ->insertFields(array(
          'label' => $label,
          'machine_name' => $machine_name,
          'entity_type' => $entity_type,
          'field_name' => $field_name,
          'bundle' => $bundle,
          'item_ids' => implode(',', $item_ids),
        ))
        ->updateFields(array(
          'item_ids' => implode(',', $item_ids),
        ))
        ->key(array(
          'machine_name' => $machine_name,
          'entity_type' => $entity_type,
          'field_name' => $field_name,
          'bundle' => $bundle,
        ))
        ->execute();
    }
  }
}
