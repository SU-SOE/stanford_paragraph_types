<?php

/**
 * @file
 * Stanford Paragraph Types Defaults Install.
 */

/**
 * Implements hook_schema().
 */
function stanford_paragraph_types_defaults_schema() {
  $schema = array();
  $schema['stanford_paragraphs_defaults'] = array(
    'description' => 'Stores serialized paragraph defaults.',
    'fields' => array(
      'uid' => array(
        'description' => 'Unique id of the config',
        'type' => 'varchar',
        'length' => 500,
        'not null' => TRUE,
        'default' => '',
      ),
      'label' => array(
        'description' => 'The administrative label',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'machine_name' => array(
        'description' => 'The machine name of the setting',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'item_ids' => array(
        'description' => 'Paragraph item IDs in the default.',
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
      ),
      'entity_type' => array(
        'description' => 'The target entity type',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'field_name' => array(
        'description' => 'The connected field name',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'bundle' => array(
        'description' => 'The connected bundle name',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('uid'),
  );
  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function stanford_paragraph_types_defaults_uninstall() {
  $query = db_select('stanford_paragraphs_defaults', 's')
    ->fields('s', array('item_ids'))
    ->execute();
  while ($item_ids = $query->fetchField()) {
    $item_ids = explode(',', $item_ids);
    foreach ($item_ids as $item_id) {
      entity_delete('paragraphs_item', $item_id);
    }
  }
}
